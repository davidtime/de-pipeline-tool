<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.deleidos</groupId>
	<artifactId>hadoop</artifactId>
	<version>3.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<profiles>
		<profile>
			<id>tag-and-push-docker-images</id>
			<activation>
				<property>
					<name>TAG_N_PUSH</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.4.0</version>
						<executions>

							<!--DOCKER TAG -->
							<execution>
								<id>tag-namenode-image</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>tag</argument>
										<argument>namenode:cdh5.6.0</argument>
										<argument>der.deleidos.com/namenode:cdh5.6.0</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>tag-secondary-namenode-image</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>tag</argument>
										<argument>secondary-namenode:cdh5.6.0</argument>
										<argument>der.deleidos.com/secondary-namenode:cdh5.6.0</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>tag-datanode-image</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>tag</argument>
										<argument>datanode:cdh5.6.0</argument>
										<argument>der.deleidos.com/datanode:cdh5.6.0</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>tag-history-server-image</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>tag</argument>
										<argument>history-server:cdh5.6.0</argument>
										<argument>der.deleidos.com/history-server:cdh5.6.0</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>tag-resource-manager-image</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>tag</argument>
										<argument>resource-manager:cdh5.6.0</argument>
										<argument>der.deleidos.com/resource-manager:cdh5.6.0</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>tag-node-manager-image</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>tag</argument>
										<argument>node-manager:cdh5.6.0</argument>
										<argument>der.deleidos.com/node-manager:cdh5.6.0</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>tag-hadoop-client-image</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>tag</argument>
										<argument>hadoop-client:cdh5.6.0</argument>
										<argument>der.deleidos.com/hadoop-client:cdh5.6.0</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>tag-hue-image</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>tag</argument>
										<argument>hue:cdh5.6.0</argument>
										<argument>der.deleidos.com/hue:cdh5.6.0</argument>
									</arguments>
								</configuration>
							</execution>









							<!--DOCKER PUSH -->
							<!-- Hooked into the install to avoid having to add a deployment stanza 
								as new approach uses artifactory's integration plug-in in Jenkins. The sleeps 
								between pushes are an attempt to cut down on the load of our micro sized 
								instance private Docker registry. -->
							<execution>
								<id>push-namenode-image</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>push</argument>
										<argument>der.deleidos.com/namenode:cdh5.6.0</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>push-namenode-image-delay</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sleep</executable>
									<arguments>
										<argument>1m</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>push-secondary-namenode-image</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>push</argument>
										<argument>der.deleidos.com/secondary-namenode:cdh5.6.0</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>push-secondary-namenode-image-delay</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sleep</executable>
									<arguments>
										<argument>1m</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>push-datanode-image</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>push</argument>
										<argument>der.deleidos.com/datanode:cdh5.6.0</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>push-datanode-image-delay</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sleep</executable>
									<arguments>
										<argument>1m</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>push-history-server-image</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>push</argument>
										<argument>der.deleidos.com/history-server:cdh5.6.0</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>push-history-server-image-delay</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sleep</executable>
									<arguments>
										<argument>1m</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>push-resource-manager-image</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>push</argument>
										<argument>der.deleidos.com/resource-manager:cdh5.6.0</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>push-resource-manager-image-delay</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sleep</executable>
									<arguments>
										<argument>1m</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>push-node-manager-image</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>push</argument>
										<argument>der.deleidos.com/node-manager:cdh5.6.0</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>push-node-manager-image-delay</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sleep</executable>
									<arguments>
										<argument>1m</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>push-hadoop-client-image</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>push</argument>
										<argument>der.deleidos.com/hadoop-client:cdh5.6.0</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>push-hadoop-client-image-delay</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sleep</executable>
									<arguments>
										<argument>1m</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>push-hue-image</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>push</argument>
										<argument>der.deleidos.com/hue:cdh5.6.0</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>









		<profile>
			<id>docker-images</id>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.4.0</version>
						<executions>
							<execution>
								<id>pre-image-build</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>cp</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>
									<arguments>
										<argument>-rfv</argument>
										<argument>${basedir}/src/docker</argument>
										<argument>${project.build.directory}/.</argument>
									</arguments>
								</configuration>
							</execution>





							<!--DOCKER BUILD -->
							<execution>
								<id>build-namenode-image</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>build</argument>
										<argument>--rm=true</argument>
										<argument>--force-rm=true</argument>
										<argument>--tag</argument>
										<argument>namenode:cdh5.6.0</argument>
										<argument>-f</argument>
										<argument>Dockerfile_namenode</argument>
										<argument>.</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>build-secondary-namenode-image</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>build</argument>
										<argument>--rm=true</argument>
										<argument>--force-rm=true</argument>
										<argument>--tag</argument>
										<argument>secondary-namenode:cdh5.6.0</argument>
										<argument>-f</argument>
										<argument>Dockerfile_secondarynamenode</argument>
										<argument>.</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>build-datanode-image</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>build</argument>
										<argument>--rm=true</argument>
										<argument>--force-rm=true</argument>
										<argument>--tag</argument>
										<argument>datanode:cdh5.6.0</argument>
										<argument>-f</argument>
										<argument>Dockerfile_datanode</argument>
										<argument>.</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>build-history-server-image</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>build</argument>
										<argument>--rm=true</argument>
										<argument>--force-rm=true</argument>
										<argument>--tag</argument>
										<argument>history-server:cdh5.6.0</argument>
										<argument>-f</argument>
										<argument>Dockerfile_historyserver</argument>
										<argument>.</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>build-resource-manager-image</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>build</argument>
										<argument>--rm=true</argument>
										<argument>--force-rm=true</argument>
										<argument>--tag</argument>
										<argument>resource-manager:cdh5.6.0</argument>
										<argument>-f</argument>
										<argument>Dockerfile_resourcemanager</argument>
										<argument>.</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>build-node-manager-image</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>build</argument>
										<argument>--rm=true</argument>
										<argument>--force-rm=true</argument>
										<argument>--tag</argument>
										<argument>node-manager:cdh5.6.0</argument>
										<argument>-f</argument>
										<argument>Dockerfile_nodemanager</argument>
										<argument>.</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>build-hadoop-client-image</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>build</argument>
										<argument>--rm=true</argument>
										<argument>--force-rm=true</argument>
										<argument>--tag</argument>
										<argument>hadoop-client:cdh5.6.0</argument>
										<argument>-f</argument>
										<argument>Dockerfile_hadoopclient</argument>
										<argument>.</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>build-hue-image</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>build</argument>
										<argument>--rm=true</argument>
										<argument>--force-rm=true</argument>
										<argument>--tag</argument>
										<argument>hue:cdh5.6.0</argument>
										<argument>-f</argument>
										<argument>Dockerfile_hue</argument>
										<argument>.</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
