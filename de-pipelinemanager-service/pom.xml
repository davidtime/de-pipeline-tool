<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.deleidos</groupId>
	<artifactId>de-pipelinemanager-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>de-pipelinemanager-service</name>
	<properties>
		<jersey.version>2.23.2</jersey.version>
	</properties>

	<!-- docker create tag push -->
	<profiles>
		<profile>
			<id>tag-and-push-docker-images</id>
			<activation>
				<property>
					<name>TAG_N_PUSH</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.4.0</version>

						<!-- Docker Tag -->
						<executions>
							<execution>
								<id>tag-pipelinerestserver-image</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>tag</argument>
										<argument>pipelinerestserver:prs1.0.0</argument>
										<argument>der.deleidos.com/pipelinerestserver:prs1.0.0</argument>
									</arguments>
								</configuration>
							</execution>

							<!-- Docker push -->
							<execution>
								<id>push-pipelinerestserver-image</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>push</argument>
										<argument>der.deleidos.com/pipelinerestserver:prs1.0.0</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>docker-images</id>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.4.0</version>
						<executions>
							<execution>
								<id>pre-image-build2</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>cp</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>
									<arguments>
										<argument>-rfv</argument>
										<argument>${basedir}/target</argument>
										<argument>${basedir}/src/docker</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>pre-image-build</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>cp</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>
									<arguments>
										<argument>-rfv</argument>
										<argument>${basedir}/src/docker</argument>
										<argument>${project.build.directory}/.</argument>
									</arguments>
								</configuration>
							</execution>

							<!-- docker build image -->
							<execution>
								<id>build-pipelinerestserver-image</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sudo</executable>
									<workingDirectory>${project.build.directory}/docker</workingDirectory>
									<arguments>
										<argument>docker</argument>
										<argument>build</argument>
										<argument>--rm=true</argument>
										<argument>--force-rm=true</argument>
										<argument>--tag</argument>
										<argument>pipelinerestserver:prs1.0.0</argument>
										<argument>-f</argument>
										<argument>Dockerfile_pipelinerestserver</argument>
										<argument>.</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<finalName>de-pipelinemanager-service</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.10</version>
				<configuration>
					<contextPath>/</contextPath>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<connectors>
						<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
							<port>80</port>
							<maxIdleTime>60000</maxIdleTime>
						</connector>
					</connectors>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.mortbay.jetty</groupId>
									<artifactId>jetty-runner</artifactId>
									<version>7.4.5.v20110725</version>
									<destFileName>jetty-runner.jar</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.2</version>
					<configuration>
						<fork>true</fork>
						<compilerArgument>-XDignore.symbol.file</compilerArgument>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-common</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet-core</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>1.11</version>
		</dependency>
		<dependency>
			<groupId>com.deleidos.analytics</groupId>
			<artifactId>analytics-common</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.deleidos</groupId>
			<artifactId>de-framework-data-model</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.deleidos</groupId>
			<artifactId>de-application-creator</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<scope>compile</scope>
		</dependency>
	</dependencies>
</project>
