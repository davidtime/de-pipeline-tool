<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.deleidos</groupId>
	<artifactId>de-operator-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
		<!-- change this if you desire to use a different version of Apex Core -->
		<apex.version>3.3.0-incubating</apex.version>
		<apex.apppackage.classpath>lib/*.jar</apex.apppackage.classpath>
		<gson.version>2.3.1</gson.version>
		<mongodb.version>2.11.4</mongodb.version>
		<junit.version>4.10</junit.version>
		<log4j.version>1.2.17</log4j.version>
		<aws.sdk.version>1.10.35</aws.sdk.version>
	</properties>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>2.9</version>
					<configuration>
						<downloadSources>true</downloadSources>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.3</version>
					<configuration>
						<encoding>UTF-8</encoding>
						<source>1.8</source>
						<target>1.8</target>
						<debug>true</debug>
						<optimize>false</optimize>
						<showDeprecation>true</showDeprecation>
						<showWarnings>true</showWarnings>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.8</version>
					<executions>
						<execution>
							<id>copy-dependencies</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
							<configuration>
								<outputDirectory>target/deps</outputDirectory>
								<includeScope>runtime</includeScope>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- generate javdoc -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<executions>
						<!-- generate xml javadoc -->
						<execution>
							<id>xml-doclet</id>
							<phase>generate-resources</phase>
							<goals>
								<goal>javadoc</goal>
							</goals>
							<configuration>
								<doclet>com.github.markusbernhardt.xmldoclet.XmlDoclet</doclet>
								<additionalparam>-d
									${project.build.directory}/generated-resources/xml-javadoc
									-filename ${project.artifactId}-${project.version}-javadoc.xml</additionalparam>
								<useStandardDocletOptions>false</useStandardDocletOptions>
								<docletArtifact>
									<groupId>com.github.markusbernhardt</groupId>
									<artifactId>xml-doclet</artifactId>
									<version>1.0.4</version>
								</docletArtifact>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- Transform xml javadoc to stripped down version containing only class/interface 
					comments and tags -->

				<!-- copy xml javadoc to class jar -->
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
					<executions>
						<execution>
							<id>copy-resources</id>
							<phase>process-resources</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${basedir}/target/classes</outputDirectory>
								<resources>
									<resource>
										<directory>${project.build.directory}/generated-resources/xml-javadoc</directory>
										<includes>
											<include>${project.artifactId}-${project.version}-javadoc.xml</include>
										</includes>
										<filtering>true</filtering>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>

	<dependencies>

		<dependency>
			<groupId>org.apache.apex</groupId>
			<artifactId>malhar-library</artifactId>
			<version>${apex.version}</version>
			<!-- If you know that your application does not need transitive dependencies 
				pulled in by malhar-library, uncomment the following to reduce the size of 
				your app package. -->
			<!-- <exclusions> <exclusion> <groupId>*</groupId> <artifactId>*</artifactId> 
				</exclusion> </exclusions> -->
		</dependency>
		
		<dependency>
			<groupId>org.apache.apex</groupId>
			<artifactId>apex-common</artifactId>
			<version>${apex.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.apache.apex</groupId>
			<artifactId>apex-engine</artifactId>
			<version>${apex.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>com.deleidos.analytics</groupId>
			<artifactId>analytics-common</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
	</dependencies>

</project>
